name: 'Test Services'
description: 'Tests if PostgreSQL and Keycloak services are running correctly'

inputs:
  postgres-username:
    description: 'PostgreSQL username for connection test'
    required: true
  postgres-password:
    description: 'PostgreSQL password for connection test'
    required: true
  postgres-db:
    description: 'PostgreSQL database name for connection test'
    required: true
  keycloak-admin:
    description: 'Keycloak admin username for connection test'
    required: true
  keycloak-admin-password:
    description: 'Keycloak admin password for connection test'
    required: true

outputs:
  status:
    description: 'Status of the services check'
    value: ${{ steps.check-status.outputs.status }}

runs:
  using: "composite"
  steps:
    - name: Install PostgreSQL client
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client curl jq

    - name: Wait for Keycloak to be ready
      id: check-status
      shell: bash
      run: |
        echo "Waiting for Keycloak to be ready..."
        max_attempts=60
        attempt=0
        
        while [ $attempt -lt $max_attempts ]; do
          attempt=$((attempt + 1))
        
          echo "Checking Keycloak status (Attempt $attempt/$max_attempts)..."
        
          # Get the health status
          health_response=$(curl -s -f http://localhost:8080/health/ready || echo "failed")
        
          if [ "$health_response" != "failed" ]; then
            if echo "$health_response" | jq -e '.status == "UP" and (.checks | any(.name == "database" and .status == "UP"))' > /dev/null; then
              echo "Keycloak is fully operational!"
        
              # Test admin authentication
              token_response=$(curl -s -X POST http://localhost:8080/realms/master/protocol/openid-connect/token \
                -H "Content-Type: application/x-www-form-urlencoded" \
                -d "client_id=admin-cli" \
                -d "username=${{ inputs.keycloak-admin }}" \
                -d "password=${{ inputs.keycloak-admin-password }}" \
                -d "grant_type=password")
        
              if echo "$token_response" | jq -e '.access_token' > /dev/null; then
                echo "Successfully authenticated to Keycloak!"
                echo "status=success" >> $GITHUB_OUTPUT
                exit 0
              fi
            fi
          fi
        
          # Show logs every 5 attempts
          if [ $((attempt % 5)) -eq 0 ]; then
            echo "Current Keycloak logs:"
            docker logs --tail 50 keycloak-container
          fi
        
          # Last attempt - show debug info
          if [ $attempt -eq $max_attempts ]; then
            echo "Keycloak failed to become ready after $max_attempts attempts"
            echo "Final status check response:"
            curl -v http://localhost:8080/health/ready || true
            echo "Full Keycloak logs:"
            docker logs keycloak-container
            echo "Container status:"
            docker ps -a
            echo "status=failure" >> $GITHUB_OUTPUT
            exit 1
          fi
        
          sleep 5
        done