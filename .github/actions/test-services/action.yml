# .github/actions/test-services/action.yml
name: 'Test Services'
description: 'Tests if PostgreSQL and Keycloak services are running correctly'
inputs:
  postgres-username:
    description: 'PostgreSQL username for connection test'
    required: true
  postgres-password:
    description: 'PostgreSQL password for connection test'
    required: true
  postgres-db:
    description: 'PostgreSQL database name for connection test'
    required: true
  keycloak-admin:
    description: 'Keycloak admin username for connection test'
    required: true
  keycloak-admin-password:
    description: 'Keycloak admin password for connection test'
    required: true
runs:
  using: "composite"
  steps:
    - name: Install PostgreSQL client
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client curl jq

    - name: Wait for PostgreSQL to be ready
      shell: bash
      run: |
        echo "Waiting for PostgreSQL to be ready..."
        for i in {1..30}; do
          if PGPASSWORD=${{ inputs.postgres-password }} pg_isready \
            -h localhost \
            -p 5432 \
            -U ${{ inputs.postgres-username }}; then
            echo "PostgreSQL is ready"
            break
          fi
          echo "Waiting for PostgreSQL... Attempt $i/30"
          sleep 2
        done

    - name: Test PostgreSQL Connection
      shell: bash
      run: |
        echo "Testing PostgreSQL connection..."
        if PGPASSWORD=${{ inputs.postgres-password }} psql \
          -h localhost \
          -p 5432 \
          -U ${{ inputs.postgres-username }} \
          -d ${{ inputs.postgres-db }} \
          -c "SELECT version();" > /dev/null 2>&1; then
          echo "PostgreSQL connection successful"
        else
          echo "PostgreSQL connection failed"
          echo "Checking PostgreSQL logs:"
          docker logs postgres-container
          exit 1
        fi

    - name: Wait for Keycloak to be ready
      shell: bash
      run: |
        echo "Waiting for Keycloak to be ready..."
        max_attempts=60  # Augmenté à 60 tentatives
        attempt=0
        
        while [ $attempt -lt $max_attempts ]; do
          attempt=$((attempt + 1))
        
          # Vérifier les logs toutes les 5 tentatives
          if [ $((attempt % 5)) -eq 0 ]; then
            echo "Current Keycloak logs:"
            docker logs --tail 50 keycloak-container
          fi
        
          if curl -s -f -o /dev/null http://localhost:8080/health/ready; then
            echo "Keycloak is ready!"
            break
          fi
        
          if [ $attempt -eq $max_attempts ]; then
            echo "Keycloak failed to become ready after $max_attempts attempts"
            echo "Final Keycloak logs:"
            docker logs keycloak-container
            docker ps -a
            exit 1
          fi
        
          echo "Waiting for Keycloak... Attempt $attempt/$max_attempts"
          sleep 5  # Augmenté à 5 secondes entre les tentatives
        done

    - name: Test Keycloak Health
      shell: bash
      run: |
        echo "Testing Keycloak health..."
        response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/health/ready)
        if [ "$response" = "200" ]; then
          echo "Keycloak is healthy"
        else
          echo "Keycloak health check failed (HTTP $response)"
          echo "Checking Keycloak logs:"
          docker logs keycloak-container
          exit 1
        fi