name: CI/CD Workflow for Spring Boot with Docker

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >
          --health-cmd "pg_isready -U test" \
          --health-interval 10s \
          --health-timeout 5s \
          --health-retries 3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Run tests
        run: mvn test

  docker:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/springboot-app:latest .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/springboot-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy Keycloak Configuration
        run: |
          docker run --name keycloak -d -p 8080:8080 \
            -e KEYCLOAK_USER=admin \
            -e KEYCLOAK_PASSWORD=admin \
            quay.io/keycloak/keycloak:latest start-dev

          echo "Waiting for Keycloak to be ready..."
          sleep 30

          echo "Setting up realms, clients, and users..."
          curl -X POST "http://localhost:8080/realms/master/protocol/openid-connect/token" \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "username=admin" \
            -d "password=admin" \
            -d "grant_type=password" \
            -d "client_id=admin-cli" \
            -o keycloak-token.json

          ACCESS_TOKEN=$(jq -r .access_token keycloak-token.json)

          # Example: Create a new realm
          curl -X POST "http://localhost:8080/admin/realms" \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{"realm": "my-realm", "enabled": true}'

      - name: Deploy to Database Server
        run: |
          echo "Custom database migration or deployment scripts go here."
